
Process vcf into internal objects 

	returns iterator of variants

Remove those outside exons

	return iterator of variants

for each disease, read each member's variances and apply filters. Intersect with other diseased members

	return iterator of variants

for each disease, remove variants according to hierachy. 




I've defined a Variant class in vcf_parser

Because we know the members for each variant, it's actually really easy to filter.

We could define a filter for each step ( exons, those with the disease, hierachy, etc ) and just
pipe through the Variances, dropping those that are irrelevant. Set up some rules.

This is extendable, parallelizable, and memory efficient 
